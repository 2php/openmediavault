#!/bin/sh
#
# This file is part of OpenMediaVault.
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @copyright Copyright (c) 2009-2016 Volker Theile
#
# OpenMediaVault is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# OpenMediaVault is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_MOUNT_DIR=${OMV_MOUNT_DIR:-"/media"}

# Display usage.
usage() {
	cat <<EOF
Usage:
  $(basename $0) [options] fsuuid

Mount a filesystem to ${OMV_MOUNT_DIR}.

OPTIONS:
  -m  Mount the given filesystem
  -u  Umount the given filesystem
  -h  Display help text and exit
EOF
}

action=
mountpoint=
fsuuid=

# Parse command line
while getopts 'mu?h' option
do
	case ${option} in
	m)
		action="mount"
		;;
	u)
		action="umount"
		;;
	h|?)
		usage >&2
		exit 2
		;;
	esac
done

shift $((OPTIND-1))
fsuuid=$1

if [ -z "${fsuuid}" -o -z "${action}" ]; then
	usage >&2;
	exit 2
fi

# Build the path of the mount point.
mountpoint="${OMV_MOUNT_DIR}/${fsuuid}"

case "${action}" in
mount)
	# Check whether the filesystem is mounted.
	if omv_is_mounted "${mountpoint}"; then
		omv_error "The filesystem '${fsuuid}' is already mounted!"
		exit 1
	fi
	# Get the filesystem information.
	device=$(blkid -U "${fsuuid}")
    eval $(blkid -o udev "${device}")
	# Create the mount point.
	mkdir -p "${mountpoint}"
	# Get the mount options.
	mountoptions="defaults"
	case "${ID_FS_TYPE}" in
	ext3|ext4)
		mountoptions="${mountoptions},acl,user_xattr,noexec"
		;;
	jfs|xfs)
		mountoptions="${mountoptions},noexec"
		;;
	hfsplus)
		mountoptions="${mountoptions},force"
		;;
	esac
	# Mount the filesystem.
	mount -o "${mountoptions}" "${device}" "${mountpoint}"
	omv_log "Successfully mounted the filesystem '${fsuuid}'."
    ;;
umount)
	# Check whether the filesystem is mounted.
	if ! omv_is_mounted "${mountpoint}"; then
		omv_error "The filesystem '${fsuuid}' is not mounted!"
		exit 1
	fi
	# Unmount the filesystem.
    umount -l "${mountpoint}"
	omv_log "Successfully unmounted the filesystem '${fsuuid}'."
	# Remove the mount point. The command fails if the directory is not
	# empty (which indicates the filesystem is still mounted).
	rmdir "${mountpoint}"
    ;;
esac

exit 0
